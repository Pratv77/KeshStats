import { AxiosResponse } from 'axios';
import type { Region } from '../types';
/**
 * The API request options.
 */
export interface ApiRequestOptions {
    /**
     * The region to make the request to.
     */
    region: Region;
    /**
     * A string name for the request to be used for error messages.
     */
    name: string;
    /**
     * A string containing parameters to be used for error messages.
     */
    params: string;
    /**
     * Whether to use regional routing values (euw, na) or region API bases (americas, europe).
     */
    regional: boolean;
}
/**
 * A class that handles API requests and rate limits for the RIOT API.
 */
export declare class ApiHandler {
    private _http;
    private limits;
    /**
     * Create a new API handler.
     *
     * @param apiKey - your RIOT API key.
     */
    constructor(apiKey: string);
    /**
     * Make an API request
     * @param url - The path to make the request to.
     * @param options - Some options to make the promise rejection messages more meaningful.
     */
    makeApiRequest(url: string, options: ApiRequestOptions): Promise<AxiosResponse<any, any>>;
}
//# sourceMappingURL=handler.d.ts.map