import type { BaseManager } from '../types';
import type { Client } from '../client';
import { Collection } from '@discordjs/collection';
/**
 * A basic manager for storing and fetching the local cached JSON files.
 */
export declare class StorageManager implements BaseManager<any> {
    private readonly _root;
    private _pathName;
    /**
     * An in-memory cache that stores the JSON data to serve data faster.
     */
    readonly cache: Collection<string, any>;
    /**
     * The client this Manager belongs to.
     */
    readonly client: Client;
    /**
     * Creates a new StorageManager instance.
     * @param client - The client this manager belongs to.
     * @param pathName - The path to the directory where the JSON files are stored.
     * @param root - The root directory of the project's storage.
     */
    constructor(client: Client, pathName: string, root: string);
    /**
     * Fetch the locally stored JSON file by its name.
     *
     * @param id - The name of the JSON file.
     */
    fetch(id: string): any | void;
    /**
     * Store a JSON file locally.
     *
     * @param id - The name of the JSON file.
     * @param data - The JSON data that needs to be stored.
     */
    store(id: string, data: any): void;
    /**
     * The path of the base directory to fetch/store files from/in
     */
    get pathName(): string;
    set pathName(newPath: string);
}
//# sourceMappingURL=StorageManager.d.ts.map